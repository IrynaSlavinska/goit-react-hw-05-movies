{"version":3,"file":"static/js/736.7c66857a.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","helpers/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n`;\n\nexport const Card = styled.li`\n  background-color: rgb(50, 50, 87);\n  width: 200px;\n  height: 320px;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Img = styled.img`\n  width: 170px;\n  height: 240px;\n  margin-bottom: 12px;\n`;\n\nexport const TextCont = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Text = styled.p`\n  color: #ffffff;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { getMovieCastActors } from 'helpers/api';\nimport { List, Card, Img, Text, TextCont } from './Cast.styled';\nimport defaultImage from 'assets/popcorn.jpg';\n\nconst baseUrl = 'https://image.tmdb.org/t/p/w300';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    getMovieCastActors(movieId)\n      .then(result => {\n        setCast(result.cast);\n      })\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  return cast.length !== 0 ? (\n    <List>\n      {cast.map(({ id, profile_path, character, name }) => (\n        <Link key={id} to={`/actors/${id}`}>\n          <Card>\n            <Img\n              src={profile_path ? `${baseUrl}${profile_path}` : defaultImage}\n              alt={name}\n              width=\"150\"\n              height=\"250\"\n            />\n            <TextCont>\n              <Text>\n                Character: <span>{character}</span>\n              </Text>\n              <Text>\n                Actor: <span>{name}</span>\n              </Text>\n            </TextCont>\n          </Card>\n        </Link>\n      ))}\n    </List>\n  ) : (\n    <p>Unknown</p>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'd2aabebb930fa1a823002bbd5c0c00b2',\n};\n\nexport const getMovies = async () => {\n  const response = await axios.get('/trending/movie/day');\n  return response.data.results;\n};\n\nexport const getMoviesByName = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`);\n  return response.data;\n};\n\nexport const getMoviesById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`);\n  return response.data;\n};\n\nexport const getMovieCastActors = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits`);\n  return response.data;\n};\n\nexport const getMovieReview = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews`);\n  return response.data;\n};\n\nexport const getActors = async () => {\n  const response = await axios.get('/person/popular');\n  return response.data.results;\n};\n\nexport const getActorById = async actorId => {\n  const response = await axios.get(`/person/${actorId}`);\n  return response.data;\n};\nexport const getActorFilms = async actorId => {\n  const response = await axios.get(`/person/${actorId}/movie_credits`);\n  return response.data;\n};\n\nexport const getActorGallery = async actorId => {\n  const response = await axios.get(`/person/${actorId}/images`);\n  return response.data;\n};\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Card","_templateObject2","Img","_templateObject3","TextCont","_templateObject4","Text","_templateObject5","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","getMovieCastActors","then","result","catch","err","console","log","length","_jsx","children","map","_ref","id","profile_path","character","name","Link","to","concat","_jsxs","src","defaultImage","alt","width","height","axios","api_key","getMovies","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","getMoviesByName","_ref2","_callee2","movieName","_context2","_x","getMoviesById","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","_x3","getMovieReview","_ref5","_callee5","_context5","_x4","getActors","_ref6","_callee6","_context6","getActorById","_ref7","_callee7","actorId","_context7","_x5","getActorFilms","_ref8","_callee8","_context8","_x6","getActorGallery","_ref9","_callee9","_context9","_x7"],"sourceRoot":""}