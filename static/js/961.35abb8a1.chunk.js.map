{"version":3,"file":"static/js/961.35abb8a1.chunk.js","mappings":"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","sources":["helpers/api.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'd2aabebb930fa1a823002bbd5c0c00b2',\n};\n\nexport const getMovies = async () => {\n  const response = await axios.get('/trending/movie/day');\n  return response.data.results;\n};\n\nexport const getMoviesByName = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`);\n  return response.data;\n};\n\nexport const getMoviesById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`);\n  return response.data;\n};\n\nexport const getMovieCastActors = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits`);\n  return response.data;\n};\n\nexport const getMovieReview = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews`);\n  return response.data;\n};\n","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\n\nimport { getMoviesById } from 'helpers/api';\nimport AnimatedLoader from 'components/Loader/Loader';\n\nconst baseImageURL = 'https://image.tmdb.org/t/p/w300/';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const [genres, setGenres] = useState([]);\n  const location = useLocation();\n\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    getMoviesById(movieId).then(result => {\n      setMovie(result);\n      setGenres(result.genres);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinkLocationRef.current}>Back to collection</Link>\n      <img\n        src={`${baseImageURL}${movie.poster_path}`}\n        alt={movie.title}\n        width=\"250\"\n        height=\"350\"\n      />\n      <h1>{movie.title}</h1>\n      <p>{movie.overview}</p>\n      <p>Genres:</p>\n      <ul>\n        {genres.length !== 0 ? (\n          genres.map(genre => <li key={genre.id}>{genre.name}</li>)\n        ) : (\n          <li>Unknown</li>\n        )}\n      </ul>\n      <p>Release date: {movie.release_date}</p>\n\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<AnimatedLoader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","api_key","getMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","getMoviesByName","_ref2","_callee2","movieName","_context2","concat","_x","getMoviesById","_ref3","_callee3","movieId","_context3","_x2","getMovieCastActors","_ref4","_callee4","_context4","_x3","getMovieReview","_ref5","_callee5","_context5","_x4","_location$state$from","_location$state","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","genres","setGenres","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","then","result","_jsxs","_Fragment","children","_jsx","Link","to","current","src","poster_path","alt","title","width","height","overview","length","map","genre","name","id","release_date","Suspense","fallback","AnimatedLoader","Outlet"],"sourceRoot":""}