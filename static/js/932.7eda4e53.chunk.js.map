{"version":3,"file":"static/js/932.7eda4e53.chunk.js","mappings":"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","sources":["components/Gallery/Gallery.styled.jsx","components/Gallery/Gallery.jsx","helpers/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n`;\n\nexport const Item = styled.li``;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getActorGallery } from 'helpers/api';\nimport { List, Item } from './Gallery.styled';\nimport defaultImage from 'assets/popcorn.jpg';\n\nconst baseImageURL = 'https://image.tmdb.org/t/p/w300/';\n\nconst Gallery = () => {\n  const { actorId } = useParams();\n  const [gallery, setGallery] = useState([]);\n\n  useEffect(() => {\n    getActorGallery(actorId).then(result => {\n      setGallery(result.profiles);\n    });\n  }, [actorId]);\n\n  return (\n    <List>\n      {gallery.map(item => {\n        return (\n          <Item key={item.file_path}>\n            <img\n              src={\n                item.file_path\n                  ? `${baseImageURL}${item.file_path}`\n                  : defaultImage\n              }\n              alt={item.vote_average}\n            />\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default Gallery;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'd2aabebb930fa1a823002bbd5c0c00b2',\n};\n\nexport const getMovies = async () => {\n  const response = await axios.get('/trending/movie/day');\n  return response.data.results;\n};\n\nexport const getMoviesByName = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`);\n  return response.data;\n};\n\nexport const getMoviesById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`);\n  return response.data;\n};\n\nexport const getMovieCastActors = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits`);\n  return response.data;\n};\n\nexport const getMovieReview = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews`);\n  return response.data;\n};\n\nexport const getActors = async () => {\n  const response = await axios.get('/person/popular');\n  return response.data.results;\n};\n\nexport const getActorById = async actorId => {\n  const response = await axios.get(`/person/${actorId}`);\n  return response.data;\n};\nexport const getActorFilms = async actorId => {\n  const response = await axios.get(`/person/${actorId}/movie_credits`);\n  return response.data;\n};\n\nexport const getActorGallery = async actorId => {\n  const response = await axios.get(`/person/${actorId}/images`);\n  return response.data;\n};\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","actorId","useParams","_useState","useState","_useState2","_slicedToArray","gallery","setGallery","useEffect","getActorGallery","then","result","profiles","_jsx","children","map","item","src","file_path","concat","defaultImage","alt","vote_average","axios","api_key","getMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","getMoviesByName","_ref2","_callee2","movieName","_context2","_x","getMoviesById","_ref3","_callee3","movieId","_context3","_x2","getMovieCastActors","_ref4","_callee4","_context4","_x3","getMovieReview","_ref5","_callee5","_context5","_x4","getActors","_ref6","_callee6","_context6","getActorById","_ref7","_callee7","_context7","_x5","getActorFilms","_ref8","_callee8","_context8","_x6","_ref9","_callee9","_context9","_x7"],"sourceRoot":""}