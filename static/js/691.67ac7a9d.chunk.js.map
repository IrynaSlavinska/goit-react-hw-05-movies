{"version":3,"file":"static/js/691.67ac7a9d.chunk.js","mappings":"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","sources":["components/MoviesGallery/MoviesGallery.jsx","helpers/api.js","pages/Home/Home.styled.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport {\n  MoviesList,\n  MovieCard,\n  CoverImage,\n  MovieTitle,\n} from 'pages/Home/Home.styled';\nimport defaultImage from 'components/popcorn.jpg';\n\nconst baseImageURL = 'https://image.tmdb.org/t/p/w300/';\n\nconst MoviesGallery = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MoviesList>\n      {movies.map(({ id, poster_path, title }) => {\n        return (\n          <MovieCard key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <CoverImage\n                src={\n                  poster_path ? `${baseImageURL}${poster_path}` : defaultImage\n                }\n                alt={title}\n                width=\"250\"\n                height=\"350\"\n              />\n              <MovieTitle>{title}</MovieTitle>\n            </Link>\n          </MovieCard>\n        );\n      })}\n    </MoviesList>\n  );\n};\n\nexport default MoviesGallery;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'd2aabebb930fa1a823002bbd5c0c00b2',\n};\n\nexport const getMovies = async () => {\n  const response = await axios.get('/trending/movie/day');\n  return response.data.results;\n};\n\nexport const getMoviesByName = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`);\n  return response.data;\n};\n\nexport const getMoviesById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`);\n  return response.data;\n};\n\nexport const getMovieCastActors = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits`);\n  return response.data;\n};\n\nexport const getMovieReview = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews`);\n  return response.data;\n};\n\nexport const getActors = async () => {\n  const response = await axios.get('/person/popular');\n  return response.data.results;\n};\n\nexport const getActorById = async actorId => {\n  const response = await axios.get(`/person/${actorId}`);\n  return response.data;\n};\nexport const getActorFilms = async actorId => {\n  const response = await axios.get(`/person/${actorId}/movie_credits`);\n  return response.data;\n};\n\nexport const getActorGallery = async actorId => {\n  const response = await axios.get(`/person/${actorId}/images`);\n  return response.data;\n};\n","import styled from '@emotion/styled';\n\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  gap: 20px;\n`;\n\nexport const MovieCard = styled.li`\n  width: 250px;\n  background-color: rgb(50, 50, 87);\n  padding: 10px;\n  transition: transform 0.3s linear;\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n`;\n\nexport const CoverImage = styled.img`\n    width: 250px\n    height: 350px\n  `;\n\nexport const MovieTitle = styled.h3`\n  margin-top: 12px;\n  font-size: 18px;\n  text-align: center;\n  color: #ffffff;\n`;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  padding: 8px;\n  border-radius: 8px;\n  font-size: 20px;\n  width: 350px;\n  outline: transparent;\n  border: 2px solid rgb(50, 50, 87);\n`;\n\nexport const Button = styled.button`\n  background-color: transparent;\n`;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesByName } from 'helpers/api';\nimport MoviesGallery from 'components/MoviesGallery/MoviesGallery';\nimport { Form, Input, Label, Button } from './Movies.styled';\nimport { CiSearch } from 'react-icons/ci';\nimport { IconContext } from 'react-icons';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const search = searchParams.get('search') ?? '';\n    if (!search) return;\n    getMoviesByName(search).then(result => {\n      setMovies(result.results);\n    });\n  }, [searchParams]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    const movieValue = e.target.search.value.trim().toLowerCase();\n    setSearchParams({ search: movieValue === '' ? {} : movieValue });\n  };\n\n  return (\n    <>\n      <Form onSubmit={submitHandler}>\n        <Label>\n          <Input type=\"text\" placeholder=\"Enter movie name...\" name=\"search\" />\n          <Button type=\"submit\">\n            <IconContext.Provider value={{ color: '#ffffff', size: 40 }}>\n              <CiSearch />\n            </IconContext.Provider>\n          </Button>\n        </Label>\n      </Form>\n      <MoviesGallery movies={movies} />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["_ref","movies","location","useLocation","_jsx","MoviesList","children","map","_ref2","id","poster_path","title","MovieCard","_jsxs","Link","to","concat","state","from","CoverImage","src","defaultImage","alt","width","height","MovieTitle","axios","api_key","getMovies","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","getMoviesByName","_callee2","movieName","_context2","_x","getMoviesById","_ref3","_callee3","movieId","_context3","_x2","getMovieCastActors","_ref4","_callee4","_context4","_x3","getMovieReview","_ref5","_callee5","_context5","_x4","getActors","_ref6","_callee6","_context6","getActorById","_ref7","_callee7","actorId","_context7","_x5","getActorFilms","_ref8","_callee8","_context8","_x6","getActorGallery","_ref9","_callee9","_context9","_x7","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","Form","Label","Input","Button","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","setMovies","useEffect","_searchParams$get","search","get","then","result","_Fragment","onSubmit","e","preventDefault","movieValue","target","value","trim","toLowerCase","type","placeholder","name","IconContext","color","size","CiSearch","MoviesGallery"],"sourceRoot":""}