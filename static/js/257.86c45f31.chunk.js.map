{"version":3,"file":"static/js/257.86c45f31.chunk.js","mappings":"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","sources":["helpers/api.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'd2aabebb930fa1a823002bbd5c0c00b2',\n};\n\nexport const getMovies = async () => {\n  const response = await axios.get('/trending/movie/day');\n  return response.data.results;\n};\n\nexport const getMoviesByName = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`);\n  return response.data;\n};\n\nexport const getMoviesById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`);\n  return response.data;\n};\n\nexport const getMovieCastActors = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits`);\n  return response.data;\n};\n\nexport const getMovieReview = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews`);\n  return response.data;\n};\n\nexport const getActors = async () => {\n  const response = await axios.get('/person/popular');\n  return response.data.results;\n};\n\nexport const getActorById = async actorId => {\n  const response = await axios.get(`/person/${actorId}`);\n  return response.data;\n};\nexport const getActorFilms = async actorId => {\n  const response = await axios.get(`/person/${actorId}/movie_credits`);\n  return response.data;\n};\n\nexport const getActorGallery = async actorId => {\n  const response = await axios.get(`/person/${actorId}/images`);\n  return response.data;\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledNav = styled(NavLink)`\n  color: #ffffff;\n  font-size: 20px;\n  &:hover {\n    color: var(--yellow);\n  }\n  &.active {\n    color: var(--yellow);\n  }\n`;\n\nexport const MovieContainer = styled.div`\n  padding: 20px;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--yellow);\n  position: relative;\n  background-image: url(${props => props.background});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(${props => props.background});\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: cover;\n    filter: blur(16px);\n    z-index: -1;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 40px;\n    flex-direction: row;\n    gap: 40px;\n  }\n`;\n\nexport const CoverImage = styled.img`\n  margin-bottom: 12px;\n  border-radius: 6px;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  color: var(--white);\n  font-size: 52px;\n  margin-bottom: 20px;\n`;\n\nexport const About = styled.p`\n  color: var(--white);\n  font-size: 18px;\n  margin-bottom: 20px;\n  line-height: 1.5;\n\n  @media screen and (min-width: 1440px) {\n    font-size: 22px;\n  }\n`;\n\nexport const Subtitle = styled.h2`\n  color: var(--white);\n  font-size: 22px;\n  margin-bottom: 6px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 12px;\n`;\n\nexport const GenreItem = styled.li`\n  color: var(--white);\n  font-size: 22px;\n`;\n\nexport const CompanyLogo = styled.img`\n  background-color: var(--white);\n  padding: 10px;\n`;\n","import { Suspense, useEffect, useState } from 'react';\nimport { useParams, Outlet, useNavigate } from 'react-router-dom';\nimport {\n  StyledNav,\n  MovieContainer,\n  CoverImage,\n  Title,\n  About,\n  Subtitle,\n  List,\n  GenreItem,\n  CompanyLogo,\n} from './MovieDetails.styled';\n\nimport { getMoviesById } from 'helpers/api';\nimport AnimatedLoader from 'components/Loader/Loader';\nimport defaultImage from 'assets/popcorn.jpg';\n\nconst baseImageURL = 'https://image.tmdb.org/t/p/w300/';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const [genres, setGenres] = useState([]);\n  const [company, setCompany] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    getMoviesById(movieId)\n      .then(result => {\n        setMovie(result);\n        setGenres(result.genres);\n        setCompany(result.production_companies[0]);\n      })\n      .catch(() => {\n        navigate('/');\n      });\n  }, [movieId, navigate]);\n\n  const backgroundUrl = `https://image.tmdb.org/t/p/w500${movie.backdrop_path}`;\n  const backgroundSrc = movie.backdrop_path && backgroundUrl;\n\n  return (\n    <>\n      <MovieContainer background={backgroundSrc}>\n        <CoverImage\n          src={\n            movie.poster_path\n              ? `${baseImageURL}${movie.poster_path}`\n              : defaultImage\n          }\n          alt={movie.title}\n          width=\"250\"\n          height=\"350\"\n        />\n\n        <div>\n          <Title>{movie.title}</Title>\n          <About>{movie.overview}</About>\n          <Subtitle>Genres:</Subtitle>\n          <List>\n            {genres.length !== 0 ? (\n              genres.map(genre => (\n                <GenreItem key={genre.id}>{genre.name}</GenreItem>\n              ))\n            ) : (\n              <GenreItem>Unknown</GenreItem>\n            )}\n          </List>\n          <Subtitle>Release date:</Subtitle>\n          <About>{movie.release_date}</About>\n          <Subtitle>Production company:</Subtitle>\n\n          <CompanyLogo\n            src={`${baseImageURL}${company.logo_path}`}\n            alt={company.name}\n            width={100}\n          />\n        </div>\n      </MovieContainer>\n      <List>\n        <li>\n          <StyledNav to=\"cast\">Cast</StyledNav>\n        </li>\n        <li>\n          <StyledNav to=\"reviews\">Reviews</StyledNav>\n        </li>\n      </List>\n      <Suspense fallback={<AnimatedLoader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","api_key","getMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","getMoviesByName","_ref2","_callee2","movieName","_context2","concat","_x","getMoviesById","_ref3","_callee3","movieId","_context3","_x2","getMovieCastActors","_ref4","_callee4","_context4","_x3","getMovieReview","_ref5","_callee5","_context5","_x4","getActors","_ref6","_callee6","_context6","getActorById","_ref7","_callee7","actorId","_context7","_x5","getActorFilms","_ref8","_callee8","_context8","_x6","getActorGallery","_ref9","_callee9","_context9","_x7","StyledNav","styled","NavLink","_templateObject","_taggedTemplateLiteral","MovieContainer","_templateObject2","props","background","CoverImage","_templateObject3","Title","_templateObject4","About","_templateObject5","Subtitle","_templateObject6","List","_templateObject7","GenreItem","_templateObject8","CompanyLogo","_templateObject9","baseImageURL","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","genres","setGenres","_useState5","_useState6","company","setCompany","navigate","useNavigate","useEffect","then","result","production_companies","catch","backgroundUrl","backdrop_path","backgroundSrc","_jsxs","_Fragment","children","_jsx","src","poster_path","defaultImage","alt","title","width","height","overview","length","map","genre","name","id","release_date","logo_path","to","Suspense","fallback","AnimatedLoader","Outlet"],"sourceRoot":""}