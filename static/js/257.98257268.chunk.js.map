{"version":3,"file":"static/js/257.98257268.chunk.js","mappings":"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","sources":["helpers/api.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'd2aabebb930fa1a823002bbd5c0c00b2',\n};\n\nexport const getMovies = async () => {\n  const response = await axios.get('/trending/movie/day');\n  return response.data.results;\n};\n\nexport const getMoviesByName = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`);\n  return response.data;\n};\n\nexport const getMoviesById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`);\n  return response.data;\n};\n\nexport const getMovieCastActors = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits`);\n  return response.data;\n};\n\nexport const getMovieReview = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews`);\n  return response.data;\n};\n\nexport const getActors = async () => {\n  const response = await axios.get('/person/popular');\n  return response.data.results;\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledNav = styled(NavLink)`\n  color: #ffffff;\n  font-size: 20px;\n  &:hover {\n    color: rgb(113, 113, 218);\n  }\n`;\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  gap: 60px;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const Container = styled.div``;\n\nexport const Title = styled.h1`\n  color: #ffffff;\n  font-size: 52px;\n  margin-bottom: 20px;\n`;\n\nexport const About = styled.p`\n  color: #ffffff;\n  font-size: 18px;\n  margin-bottom: 20px;\n  width: 1000px;\n  line-height: 1.5;\n`;\n\nexport const Subtitle = styled.h2`\n  color: #ffffff;\n  font-size: 22px;\n  margin-bottom: 6px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 12px;\n`;\n\nexport const GenreItem = styled.li`\n  color: #ffffff;\n  font-size: 18px;\n`;\n","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { useParams, Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport {\n  StyledNav,\n  MovieContainer,\n  Container,\n  Title,\n  About,\n  Subtitle,\n  List,\n  GenreItem,\n} from './MovieDetails.styled';\n\nimport { getMoviesById } from 'helpers/api';\nimport AnimatedLoader from 'components/Loader/Loader';\nimport defaultImage from 'components/popcorn.jpg';\n\nconst baseImageURL = 'https://image.tmdb.org/t/p/w300/';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const [genres, setGenres] = useState([]);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    getMoviesById(movieId)\n      .then(result => {\n        setMovie(result);\n        setGenres(result.genres);\n      })\n      .catch(() => {\n        navigate('/');\n      });\n  }, [movieId, navigate]);\n\n  return (\n    <>\n      <StyledNav to={backLinkLocationRef.current}>Back to collection</StyledNav>\n\n      <MovieContainer>\n        <img\n          src={\n            movie.poster_path\n              ? `${baseImageURL}${movie.poster_path}`\n              : defaultImage\n          }\n          alt={movie.title}\n          width=\"250\"\n          height=\"350\"\n        />\n\n        <Container>\n          <Title>{movie.title}</Title>\n          <About>{movie.overview}</About>\n          <Subtitle>Genres:</Subtitle>\n          <List>\n            {genres.length !== 0 ? (\n              genres.map(genre => (\n                <GenreItem key={genre.id}>{genre.name}</GenreItem>\n              ))\n            ) : (\n              <GenreItem>Unknown</GenreItem>\n            )}\n          </List>\n          <Subtitle>Release date:</Subtitle>\n          <About>{movie.release_date}</About>\n        </Container>\n      </MovieContainer>\n      <List>\n        <li>\n          <StyledNav to=\"cast\">Cast</StyledNav>\n        </li>\n        <li>\n          <StyledNav to=\"reviews\">Reviews</StyledNav>\n        </li>\n      </List>\n      <Suspense fallback={<AnimatedLoader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","api_key","getMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","getMoviesByName","_ref2","_callee2","movieName","_context2","concat","_x","getMoviesById","_ref3","_callee3","movieId","_context3","_x2","getMovieCastActors","_ref4","_callee4","_context4","_x3","getMovieReview","_ref5","_callee5","_context5","_x4","getActors","_ref6","_callee6","_context6","StyledNav","styled","NavLink","_templateObject","_taggedTemplateLiteral","MovieContainer","_templateObject2","Container","_templateObject3","Title","_templateObject4","About","_templateObject5","Subtitle","_templateObject6","List","_templateObject7","GenreItem","_templateObject8","_location$state$from","_location$state","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","genres","setGenres","location","useLocation","navigate","useNavigate","backLinkLocationRef","useRef","state","from","useEffect","then","result","catch","_jsxs","_Fragment","children","_jsx","to","current","src","poster_path","defaultImage","alt","title","width","height","overview","length","map","genre","name","id","release_date","Suspense","fallback","AnimatedLoader","Outlet"],"sourceRoot":""}